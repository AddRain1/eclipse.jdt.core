/*******************************************************************************
 * Copyright (c) 2000, 2013 IBM Corporation and others.
 *
 * This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License 2.0
 * which accompanies this distribution, and is available at
 * https://www.eclipse.org/legal/epl-2.0/
 *
 * SPDX-License-Identifier: EPL-2.0
 *
 *
 * Contributors:
 *     IBM Corporation - initial API and implementation
 *******************************************************************************/
package org.eclipse.jdt.internal.compiler.parser;

/**
 * IMPORTANT NOTE: These constants are dedicated to the internal Scanner implementation.
 * It is mirrored in org.eclipse.jdt.core.compiler public package where it is API.
 * The mirror implementation is using the backward compatible ITerminalSymbols constant
 * definitions (stable with 2.0), whereas the internal implementation uses TerminalTokens
 * which constant values reflect the latest parser generation state.
 */
/**
 * Maps each terminal symbol in the java-grammar into a unique integer.
 * This integer is used to represent the terminal when computing a parsing action.
 *
 * Disclaimer : These constant values are generated automatically using a Java
 * grammar, therefore their actual values are subject to change if new keywords
 * were added to the language (for instance, 'assert' is a keyword in 1.4).
 */
public interface TerminalTokens {

	// special tokens not part of grammar - not autogenerated
	int TokenNameNotAToken = 0,
							TokenNameWHITESPACE = 1000,
							TokenNameCOMMENT_LINE = 1001,
							TokenNameCOMMENT_BLOCK = 1002,
							TokenNameCOMMENT_JAVADOC = 1003;

	int TokenNameIdentifier = 22,
							TokenNameabstract = 52,
							TokenNameassert = 74,
							TokenNameboolean = 98,
							TokenNamebreak = 75,
							TokenNamebyte = 99,
							TokenNamecase = 100,
							TokenNamecatch = 101,
							TokenNamechar = 102,
							TokenNameclass = 67,
							TokenNamecontinue = 76,
							TokenNameconst = 127,
							TokenNamedefault = 72,
							TokenNamedo = 77,
							TokenNamedouble = 103,
							TokenNameelse = 112,
							TokenNameenum = 70,
							TokenNameextends = 86,
							TokenNamefalse = 39,
							TokenNamefinal = 53,
							TokenNamefinally = 110,
							TokenNamefloat = 104,
							TokenNamefor = 78,
							TokenNamegoto = 128,
							TokenNameif = 79,
							TokenNameimplements = 123,
							TokenNameimport = 105,
							TokenNameinstanceof = 17,
							TokenNameint = 106,
							TokenNameinterface = 69,
							TokenNamelong = 107,
							TokenNamenative = 54,
							TokenNamenew = 36,
							TokenNamenull = 40,
							TokenNamepackage = 85,
							TokenNameprivate = 55,
							TokenNameprotected = 56,
							TokenNamepublic = 57,
							TokenNamereturn = 80,
							TokenNameshort = 108,
							TokenNamestatic = 38,
							TokenNamestrictfp = 58,
							TokenNamesuper = 34,
							TokenNameswitch = 81,
							TokenNamesynchronized = 51,
							TokenNamethis = 35,
							TokenNamethrow = 82,
							TokenNamethrows = 120,
							TokenNametransient = 59,
							TokenNametrue = 41,
							TokenNametry = 83,
							TokenNamevoid = 109,
							TokenNamevolatile = 60,
							TokenNamewhile = 73,
							TokenNamemodule = 113,
							TokenNameopen = 114,
							TokenNamerequires = 115,
							TokenNametransitive = 121,
							TokenNameexports = 116,
							TokenNameopens = 117,
							TokenNameto = 124,
							TokenNameuses = 118,
							TokenNameprovides = 119,
							TokenNamewith = 125,
							TokenNameIntegerLiteral = 42,
							TokenNameLongLiteral = 43,
							TokenNameFloatingPointLiteral = 44,
							TokenNameDoubleLiteral = 45,
							TokenNameCharacterLiteral = 46,
							TokenNameStringLiteral = 47,
							TokenNameRawStringLiteral = 48,
							TokenNamePLUS_PLUS = 2,
							TokenNameMINUS_MINUS = 3,
							TokenNameEQUAL_EQUAL = 19,
							TokenNameLESS_EQUAL = 12,
							TokenNameGREATER_EQUAL = 13,
							TokenNameNOT_EQUAL = 20,
							TokenNameLEFT_SHIFT = 18,
							TokenNameRIGHT_SHIFT = 14,
							TokenNameUNSIGNED_RIGHT_SHIFT = 16,
							TokenNamePLUS_EQUAL = 87,
							TokenNameMINUS_EQUAL = 88,
							TokenNameMULTIPLY_EQUAL = 89,
							TokenNameDIVIDE_EQUAL = 90,
							TokenNameAND_EQUAL = 91,
							TokenNameOR_EQUAL = 92,
							TokenNameXOR_EQUAL = 93,
							TokenNameREMAINDER_EQUAL = 94,
							TokenNameLEFT_SHIFT_EQUAL = 95,
							TokenNameRIGHT_SHIFT_EQUAL = 96,
							TokenNameUNSIGNED_RIGHT_SHIFT_EQUAL = 97,
							TokenNameOR_OR = 31,
							TokenNameAND_AND = 30,
							TokenNamePLUS = 4,
							TokenNameMINUS = 5,
							TokenNameNOT = 63,
							TokenNameREMAINDER = 9,
							TokenNameXOR = 23,
							TokenNameAND = 21,
							TokenNameMULTIPLY = 8,
							TokenNameOR = 27,
							TokenNameTWIDDLE = 64,
							TokenNameDIVIDE = 10,
							TokenNameGREATER = 15,
							TokenNameLESS = 11,
							TokenNameLPAREN = 24,
							TokenNameRPAREN = 25,
							TokenNameLBRACE = 49,
							TokenNameRBRACE = 33,
							TokenNameLBRACKET = 6,
							TokenNameRBRACKET = 65,
							TokenNameSEMICOLON = 26,
							TokenNameQUESTION = 29,
							TokenNameCOLON = 62,
							TokenNameCOMMA = 32,
							TokenNameDOT = 1,
							TokenNameEQUAL = 71,
							TokenNameAT = 37,
							TokenNameELLIPSIS = 122,
							TokenNameARROW = 111,
							TokenNameCOLON_COLON = 7,
							TokenNameBeginLambda = 50,
							TokenNameBeginIntersectionCast = 66,
							TokenNameBeginTypeArguments = 84,
							TokenNameElidedSemicolonAndRightBrace = 68,
							TokenNameAT308 = 28,
							TokenNameAT308DOTDOTDOT = 126,
							TokenNameEOF = 61,
							TokenNameERROR = 129;
}
